//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: MSAHeader.proto

package proto;

@kotlin.jvm.JvmName("-initializemSAHeader")
inline fun mSAHeader(block: proto.MSAHeaderKt.Dsl.() -> kotlin.Unit): proto.MSAHeaderOuterClass.MSAHeader =
  proto.MSAHeaderKt.Dsl._create(proto.MSAHeaderOuterClass.MSAHeader.newBuilder()).apply { block() }._build()
object MSAHeaderKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: proto.MSAHeaderOuterClass.MSAHeader.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: proto.MSAHeaderOuterClass.MSAHeader.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): proto.MSAHeaderOuterClass.MSAHeader = _builder.build()

    /**
     * <code>string requester_id = 1;</code>
     */
    var requesterId: kotlin.String
      @JvmName("getRequesterId")
      get() = _builder.getRequesterId()
      @JvmName("setRequesterId")
      set(value) {
        _builder.setRequesterId(value)
      }
    /**
     * <code>string requester_id = 1;</code>
     */
    fun clearRequesterId() {
      _builder.clearRequesterId()
    }

    /**
     * <code>string message_uuid = 2;</code>
     */
    var messageUuid: kotlin.String
      @JvmName("getMessageUuid")
      get() = _builder.getMessageUuid()
      @JvmName("setMessageUuid")
      set(value) {
        _builder.setMessageUuid(value)
      }
    /**
     * <code>string message_uuid = 2;</code>
     */
    fun clearMessageUuid() {
      _builder.clearMessageUuid()
    }

    /**
     * <code>.proto.MSAHeader.Type type = 3;</code>
     */
     var type: proto.MSAHeaderOuterClass.MSAHeader.Type
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /**
     * <code>.proto.MSAHeader.Type type = 3;</code>
     */
    fun clearType() {
      _builder.clearType()
    }

    /**
     * <code>string url = 4;</code>
     */
    var url: kotlin.String
      @JvmName("getUrl")
      get() = _builder.getUrl()
      @JvmName("setUrl")
      set(value) {
        _builder.setUrl(value)
      }
    /**
     * <code>string url = 4;</code>
     */
    fun clearUrl() {
      _builder.clearUrl()
    }

    /**
     * <code>string method = 5;</code>
     */
    var method: kotlin.String
      @JvmName("getMethod")
      get() = _builder.getMethod()
      @JvmName("setMethod")
      set(value) {
        _builder.setMethod(value)
      }
    /**
     * <code>string method = 5;</code>
     */
    fun clearMethod() {
      _builder.clearMethod()
    }

    /**
     * <code>int32 message_index = 6;</code>
     */
    var messageIndex: kotlin.Int
      @JvmName("getMessageIndex")
      get() = _builder.getMessageIndex()
      @JvmName("setMessageIndex")
      set(value) {
        _builder.setMessageIndex(value)
      }
    /**
     * <code>int32 message_index = 6;</code>
     */
    fun clearMessageIndex() {
      _builder.clearMessageIndex()
    }

    /**
     * <code>.proto.MSAHeader.State state = 7;</code>
     */
     var state: proto.MSAHeaderOuterClass.MSAHeader.State
      @JvmName("getState")
      get() = _builder.getState()
      @JvmName("setState")
      set(value) {
        _builder.setState(value)
      }
    /**
     * <code>.proto.MSAHeader.State state = 7;</code>
     */
    fun clearState() {
      _builder.clearState()
    }

    /**
     * <code>bool is_next = 8;</code>
     */
    var isNext: kotlin.Boolean
      @JvmName("getIsNext")
      get() = _builder.getIsNext()
      @JvmName("setIsNext")
      set(value) {
        _builder.setIsNext(value)
      }
    /**
     * <code>bool is_next = 8;</code>
     */
    fun clearIsNext() {
      _builder.clearIsNext()
    }

    /**
     * <code>string http_header = 9;</code>
     */
    var httpHeader: kotlin.String
      @JvmName("getHttpHeader")
      get() = _builder.getHttpHeader()
      @JvmName("setHttpHeader")
      set(value) {
        _builder.setHttpHeader(value)
      }
    /**
     * <code>string http_header = 9;</code>
     */
    fun clearHttpHeader() {
      _builder.clearHttpHeader()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun proto.MSAHeaderOuterClass.MSAHeader.copy(block: proto.MSAHeaderKt.Dsl.() -> kotlin.Unit): proto.MSAHeaderOuterClass.MSAHeader =
  proto.MSAHeaderKt.Dsl._create(this.toBuilder()).apply { block() }._build()

